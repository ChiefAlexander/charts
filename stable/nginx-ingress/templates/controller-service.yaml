apiVersion: v1
kind: Service
metadata:
{{- if .Values.controller.service.annotations }}
  annotations:
  {{- range $key, $value := .Values.controller.service.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
{{- end }}
  labels:
{{- if .Values.controller.service.labels }}
{{ toYaml .Values.controller.service.labels | indent 4 }}
{{- end }}
    app.kubernetes.io/name: {{ template "nginx-ingress.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "nginx-ingress.controller.fullname" . }}
  name: {{ template "nginx-ingress.controller.fullname" . }}
spec:
{{- if not .Values.controller.service.omitClusterIP }}
  clusterIP: "{{ .Values.controller.service.clusterIP }}"
{{- end }}
{{- if .Values.controller.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.controller.service.externalIPs | indent 4 }}
{{- end }}
{{- if .Values.controller.service.loadBalancerIP }}
  loadBalancerIP: "{{ .Values.controller.service.loadBalancerIP }}"
{{- end }}
{{- if .Values.controller.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
{{ toYaml .Values.controller.service.loadBalancerSourceRanges | indent 4 }}
{{- end }}
{{- if and (semverCompare ">=1.7-0" .Capabilities.KubeVersion.GitVersion) (.Values.controller.service.externalTrafficPolicy) }}
  externalTrafficPolicy: "{{ .Values.controller.service.externalTrafficPolicy }}"
{{- end }}
{{- if and (semverCompare ">=1.7-0" .Capabilities.KubeVersion.GitVersion) (.Values.controller.service.healthCheckNodePort) }}
  healthCheckNodePort: {{ .Values.controller.service.healthCheckNodePort }}
{{- end }}
  ports:
    {{- $setNodePorts := (or (eq .Values.controller.service.type "NodePort") (eq .Values.controller.service.type "LoadBalancer")) }}
    {{- if .Values.controller.service.enableHttp }}
    - name: http
      port: 80
      protocol: TCP
      targetPort: {{ .Values.controller.service.targetPorts.http }}
      {{- if (and $setNodePorts (not (empty .Values.controller.service.nodePorts.http))) }}
      nodePort: {{ .Values.controller.service.nodePorts.http }}
      {{- end }}
    {{- end }}
    {{- if .Values.controller.service.enableHttps }}
    - name: https
      port: 443
      protocol: TCP
      targetPort: {{ .Values.controller.service.targetPorts.https }}
      {{- if (and $setNodePorts (not (empty .Values.controller.service.nodePorts.https))) }}
      nodePort: {{ .Values.controller.service.nodePorts.https }}
      {{- end }}
    {{- end }}
  {{- range $key, $value := .Values.tcp }}
    - name: "{{ $key }}-tcp"
      port: {{ $key }}
      protocol: TCP
      targetPort: "{{ $key }}-tcp"
  {{- end }}
  {{- range $key, $value := .Values.udp }}
    - name: "{{ $key }}-udp"
      port: {{ $key }}
      protocol: UDP
      targetPort: "{{ $key }}-udp"
  {{- end }}
  selector:
    app.kubernetes.io/name: {{ template "nginx-ingress.name" . }}
    app.kubernetes.io/component: {{ template "nginx-ingress.controller.fullname" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.controller.podLabels }}
{{ toYaml .Values.controller.podLabels | indent 4 }}
    {{- end }}
  type: "{{ .Values.controller.service.type }}"
